//= require ./vendor/jquery
//= require ./vendor/foundation
//= require ./vendor/tinymce/tinymce.min.js
//= require_directory ./vendor
//= require_directory .

jQuery(document).foundation();

jQuery(document).ready(function($) {
  $("#menu-toggle").click(function(e) {
    e.preventDefault();
    $("#wrapper").toggleClass("toggled");

    if ($("#wrapper").hasClass("toggled")) {
      $(this).find("i").removeClass("fa-angle-left");
      $(this).find("i").addClass("fa-angle-right");
    } else {
      $(this).find("i").removeClass("fa-angle-right");
      $(this).find("i").addClass("fa-angle-left");
    }
  });
  
  $(".destroy_resource").on("click", function(e) {
    e.preventDefault();
    
    $that = $(this);
    
    swal({
      title: "Are you sure?",
      text: "You will not be able to recover this after deleting...",
      type: "warning",
      showCancelButton: true,
      confirmButtonColor: "#DD6B55",
      confirmButtonText: "Yes, delete it!",
      closeOnConfirm: true
    }, function() {
      $that.parent().find("form").trigger("submit");
    });
  });
  
  tinymce.init({
    selector: ".tinymce",
    plugins: [
      "advlist autolink lists link image charmap hr anchor pagebreak",
      "searchreplace visualblocks visualchars code fullscreen",
      "insertdatetime media nonbreaking save table contextmenu directionality",
      "paste textcolor colorpicker textpattern imagetools"
    ],
    toolbar1: "undo redo | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify |  forecolor backcolor",
    toolbar2: "bullist numlist outdent indent | link image gutsimages media",
    setup: function (editor) {
      editor.addButton("gutsimages", {
        text: null,
        icon: "browse",
        onclick: function () {
          editor.windowManager.open({
            title: "Browse",
            url: "<%= Guts::Engine.routes.url_helpers.media_path %>?insert=1",
            width: 700,
            height: 700
          });
        }
      });
    },
  });
});